# brew install zplug

export ZPLUG_HOME=~/.zplug

if [ ! -d "$ZPLUG_HOME" ]; then
  git clone https://github.com/zplug/zplug $ZPLUG_HOME
fi

source $ZPLUG_HOME/init.zsh

# Use the package as a command
# And accept glob patterns (e.g., brace, wildcard, ...)
# zplug "Jxck/dotfiles", as:command, use:"bin/{histuniq,color}"

# Can manage everything e.g., other person's zshrc
# zplug "tcnksm/docker-alias", use:zshrc

# Disable updates using the "frozen" tag
# zplug "k4rthik/git-cal", as:command, frozen:1

# Supports oh-my-zsh plugins and the like
zplug "plugins/git",   from:oh-my-zsh

# Load if "if" tag returns true
zplug "lib/clipboard", from:oh-my-zsh, if:"[[ $OSTYPE == *darwin* ]]"

# Supports checking out a specific branch/tag/commit
# zplug "mollifier/anyframe", at:4c23cb60

# Group dependencies
# Load "emoji-cli" if "jq" is installed in this example
zplug "stedolan/jq", \
    from:gh-r, \
    as:command, \
    rename-to:jq
zplug "b4b4r07/emoji-cli", \
    on:"stedolan/jq"
# Note: To specify the order in which packages should be loaded, use the defer
#       tag described in the next section

# Set the priority when loading
# e.g., zsh-syntax-highlighting must be loaded
# after executing compinit command and sourcing other plugins
# (If the defer tag is given 2 or above, run after compinit command)
zplug "zsh-users/zsh-syntax-highlighting", defer:2
zplug "zdharma/fast-syntax-highlighting"

# Can manage local plugins
# zplug "~/.zsh", from:local

# Improved directory listing
# https://github.com/supercrabtree/k
zplug "supercrabtree/k"

# Load theme file
# zplug 'dracula/zsh', as:theme
# zplug "bhilburn/powerlevel9k", use:powerlevel9k.zsh-theme

# Async for zsh, used by pure
zplug "mafredri/zsh-async", from:github, defer:0
# Pure theme
zplug "sindresorhus/pure", use:pure.zsh, from:github, as:theme

zplug "zlsun/solarized-man"

# Aliases and color some command output
zplug "modules/utility", from:prezto
zplug "modules/editor", from:prezto
zplug "modules/history", from:prezto
# Use TMUX plugin from zpresto
# https://github.com/sorin-ionescu/prezto/tree/master/modules/tmux
zplug "modules/tmux", from:prezto

zplug "plugins/shrink-path", from:oh-my-zsh

zplug "zsh-users/zsh-history-substring-search", defer:2
zplug "zsh-users/zsh-completions"
# XXX Check how to use forward-word with autosuggestions
zplug "zsh-users/zsh-autosuggestions"

# XXX Find replacement allowing to disable check for some aliases
zplug "MichaelAquilina/zsh-you-should-use"

zplug "webyneter/docker-aliases", use:docker-aliases.plugin.zsh

# Usage: = 2+2
zplug "arzzen/calc.plugin.zsh"

# Should be loaded after modules/utility to overwrite cd alias
# https://github.com/b4b4r07/enhancd
zplug "b4b4r07/enhancd", use:init.sh, defer:3
export ENHANCD_FILTER='fzf'
# When entering a git repo do a git status, othewise do an ls
export ENHANCD_HOOK_AFTER_CD='([ -d .git ] || git rev-parse --git-dir > /dev/null 2>&1) && git st || ls -lhrt'
# export ENHANCD_COMMAND='c'
export ENHANCD_DISABLE_HOME=1
export ENHANCD_DISABLE_HYPHEN=1
export ENHANCD_DISABLE_DOT=1
export ENHANCD_HYPHEN_ARG=_
# Run k when entering a directory
export ENHANCD_HOOK_AFTER_CD=k

zplug "marzocchi/zsh-notify"

zplug "supercrabtree/k"

zplug "chrissicool/zsh-256color"

# Load after modute/editor to enable VI bindings
zplug "sharat87/zsh-vim-mode", defer:3

# Ctrl-R to search multi word with AND
zplug "zdharma/history-search-multi-word"

# Fuzzy command line completion: Ctrl-T
zplug "junegunn/fzf", use:"shell/*.zsh", defer:2
# Grab binaries from GitHub Releases
# and rename with the "rename-to:" tag
zplug "junegunn/fzf-bin", \
    from:gh-r, \
    as:command, \
    rename-to:fzf, \
    use:"*darwin*amd64*", \
    if:"[[ $OSTYPE == *darwin* ]]"

zplug "so-fancy/diff-so-fancy", as:command

# Replacement for autojump
zplug "rupa/z", use:"*.sh"

# prezto
# Color output (auto set to 'no' on dumb terminals).
zstyle ':prezto:*:*' color 'yes'

# prezto/utility
if zplug check modules/utility; then
  # Use safe operations by default
  zstyle ':prezto:module:utility' safe-ops 'yes'
fi

# prezto/editor
if zplug check modules/editor; then
  zstyle ':prezto:module:editor' key-bindings 'vi'
  zstyle ':prezto:module:editor' dot-expansion 'yes'
fi

if zplug check modules/tmux; then
  zstyle ':prezto:module:tmux:auto-start' local 'yes'
  zstyle ':prezto:module:tmux:auto-start' remote 'yes'
  zstyle ':prezto:module:tmux:session' name 'work'
  # zstyle ':prezto:module:tmux:iterm' integrate 'yes'
fi

zplug 'zplug/zplug', hook-build:'zplug --self-manage'

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

# Then, source plugins and add commands to $PATH
# zplug load --verbose
zplug load

# Plugins-specific configuration required after loading them

if zplug check caiogondim/bullet-train.zsh; then
  BULLETTRAIN_STATUS_EXIT_SHOW=true
  # bullettrain promt: disable nvm and go, show path using custom segment
  BULLETTRAIN_PROMPT_ORDER=(time status context custom perl ruby aws elixir virtualenv git hg cmd_exec_time)
  # Display shunk path in custom prompt segement
  BULLETTRAIN_CUSTOM_MSG='$(shrink_path -f "$PWD")'
  BULLETTRAIN_CUSTOM_BG=blue
  BULLETTRAIN_CUSTOM_FG=white
fi

if zplug "MichaelAquilina/zsh-you-should-use"; then
  export YSU_HARDCORE=0
fi

# ZSH options

# ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#ff00ff,bg=cyan,bold,underline"
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=128"

# Make sure prompt is able to be generated properly.
setopt prompt_subst

# Executing directories will open them
setopt auto_cd

## Completion

# Hilight directories
zstyle -e ':completion:*:default' list-colors 'reply=("${PREFIX:+=(#bi)($PREFIX:t)(?)*==34=34}:${(s.:.)LS_COLORS}")';

# Rehash when completing commands
zstyle ":completion:*:commands" rehash 1
# Completion menu's navigation with arrows
zstyle ':completion:*' menu select
zstyle ':completion:*:matches' group 'yes'
# let's use the tag name as group name
zstyle ':completion:*' group-name ""
zstyle ':completion:*:warnings' format '%BSorry, no matches for: %d%b'
zstyle ':completion:*:descriptions' format "%{${fg_bold[magenta]}%}= %d =%{$reset_color%}"
# Case insensitive completion
# https://github.com/robbyrussell/oh-my-zsh/blob/master/lib/completion.zsh
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|=*' 'l:|=* r:|=*'
# zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|=*' 'l:|=* r:|=*'

#unsetopt correct_all
#setopt menu_complete
#unsetopt flowcontrol
#setopt auto_pushd
#setopt pushd_ignore_dups
#setopt auto_menu
#setopt interactive_comments
#setopt complete_in_word
#setopt promptpercent

# Always use substring search
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

bindkey -M vicmd 'j' history-substring-search-down

# In Vi mode use q to allow to use another command before current one
bindkey -M vicmd "q" push-line

# Push a command onto a stack allowing you to run another command first
bindkey '^J' push-line

# Allows editing the command line with an external editor
autoload edit-command-line
zle -N edit-command-line
# Press Esc=v to edit command line
bindkey -M vicmd "v" edit-command-line

# Alt-S inserts sudo at the starts of the line
insert_sudo () { zle beginning-of-line; zle -U '_ ' }
zle -N insert-sudo insert_sudo
bindkey 's' insert-sudo

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='nvim'
  alias vim='nvim'
  alias vi='nvim'
fi

# You may need to manually set your language environment
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

typeset -U path
path+=/usr/local/sbin

export PATH="$HOME/bin:$PATH"

## list only directories
alias lsd='ls -d */'

# https://github.com/pyenv/pyenv/wiki/Common-build-problems
# Required for building python with pyenv on Mac OS X
export CFLAGS="-I/usr/local/opt/openssl/include -I/usr/local/opt/zlib/include -I/usr/local/opt/sqlite/include"
export LDFLAGS="-L/usr/local/opt/openssl/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/sqlite/lib"
# Speeding up build
export CFLAGS="-O2 $CFLAGS"
# PYTHON_CONFIGURE_OPTS=--enable-unicode=ucs2

export MAKEOPS='j6'

# added by travis gem
[ -f ~/.travis/travis.sh ] && source ~/.travis/travis.sh

# Source secrets
[ -f ~/.secrets ] && source ~/.secrets

# https://apple.stackexchange.com/questions/3253/ctrl-o-behavior-in-terminal-app
# To prevent ctrl-o being discared by the terminal driver
if [[ "$OSTYPE" == "darwin"* ]]; then
  stty discard undef
fi
