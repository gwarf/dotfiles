### Keyboard
#
# \C control
# \e Alt
# \e esc
# compose

# Moving
# Bind Browser {{{1
bind browser g top-page
bind browser G bottom-page
# cb is catched by tmux...
bind browser \cb previous-page
bind browser \cf next-page
bind browser <Enter> view-file
bind browser A check-new
# Bind Index {{{1
bind index g first-entry
bind index G last-entry
bind index H current-top
bind index M current-middle
bind index L current-bottom
bind index pagedown     next-page
bind index pageup   previous-page
bind index zt current-top
bind index zz current-middle
bind index zb current-bottom
bind index { top-page
bind index } bottom-page
bind index ~ set-flag
bind index \cv what-key
bind index i mail
bind index N toggle-new
# Bind Pager {{{1
bind pager g top
bind pager G bottom
bind pager j next-line
bind pager k previous-line
bind pager i edit
bind pager R group-reply
bind pager <down> next-line
bind pager <up> previous-line
bind pager \cd half-down
bind pager \ce next-line
bind pager \cf next-page
bind pager \cm next-line
bind pager \cn half-down
bind pager \cn next-page
bind pager \cp half-up
bind pager \cu half-up
bind pager N next-unread
# Bind Index/Pager {{{1
bind index,pager \cn next-thread
bind index,pager \cn read-thread
bind index,pager \cd delete-thread
bind index,pager f forward-message
#bind index,pager n next-undeleted
#bind index,pager p previous-undeleted
#bind index,pager N next-unread
#bind index,pager N toggle-new
bind index,pager P previous-unread
# }}}

# Flagging
bind index F flag-message
bind pager F flag-message

# Fetching mail
macro index \cf "<shell-escape>offlineimap\r"
#bind index G imap-fetch-mail

macro index z "c?\t" "List mailboxes and switch to selected one"

# default save path
macro attach s <save-entry><bol>~/Downloads/<eol>

# help
macro generic <F1> "!vim ~/.mutt/mutt.help\n" "Man page"
macro index <F1> "!vim ~/.mutt/mutt.help\n" "Man page"
macro pager <F1> "!vim ~/.mutt/mutt.help\n" "Man page"

# macros to invoke a profile
macro index <F8> ":source ~/.mutt/profile.gnubila\n" "Load profile: gnubila"
macro index <F9> ":source ~/.mutt/profile.perso\n" "Load profile: perso"
macro index <F10> ":source ~/.mutt/profile.gwarf\n" "Load profile: gwarf"

macro compose <F8> "<enter-command>source ~/.mutt/profile.gnubila\n<edit-from>\
  <kill-line>Baptiste Grenier <bgrenier@gnubila.fr>\n<enter-command>\
  set editor='chsig ~/.mutt/signature-gnubila'\n<edit-headers>\n" \
  "Load profile: gnubila"
macro compose <F9> "<enter-command>source ~/.mutt/profile.perso\n<edit-from>\
  <kill-line>Baptiste Grenier <baptiste@bapt.name>\n<enter-command>\
  set editor='chsig ~/.mutt/signature-perso'\n<edit-headers>\n" \
  "Load profile: perso"
macro compose <F10> "<enter-command>source ~/.mutt/profile.gwarf\n<edit-from>\
  <kill-line>Baptiste Grenier <gwarf@gwarf.org>\n<enter-command>\
  set editor='chsig ~/.mutt/signature-perso'\n<edit-headers>\n" \
  "Load profile: gwarf"

# Attachments
macro attach W <save-entry><kill-line>/home/baptiste/Documents/
macro attach E <save-entry><kill-line>/home/baptiste/Documents/<enter>

# reload config
#macro compose <F12> "<enter-command>source ~/.muttrc\n" "Reload config"
#macro index <F12> "<enter-command>source ~/.muttrc\n" "Reload config"

# show _all_ mails
macro index \# "l~A\r"      "Show ALL Mails"
# Show work emails
macro index \" "l !(~f 'Hacker News 50' | ~s puppet | ~s mcollective \
  | ~f GetMetal.org | ~f Reflets | ~f 'New Album Releases' | ~f LinuxFr.org)\r"
# show flagged and unread mails (i.e. important)
macro index \' "l(~F | ~U) ! ~D\r"  "Show Important Mails"
# show unreplied and flagged mails (i.e. TODO)
#macro index \` "l(! ~Q | ~F) ! ~D\r"  "Show TODO Mail"
# mark everything as read
macro index + "T~N\n;N;t" "Mark everything as read"

#macro index \ci |urlview\n  # simulate the old browse-url function
#macro pager \ci |urlview\n  # simulate the old browse-url function

macro index,pager \ci "<pipe-message> urlscan -c<Enter>" "call urlscan to extract URLs out of a message"
macro attach,compose \ci "<pipe-entry> urlscan -c<Enter>" "call urlscan to extract URLs out of a message"

#macro index \ci |w3m\n "call w3m to extract URLs out of a message"
#macro pager \ci |w3m\n "call w3m to extract URLs out of a message"

# http://www.memoryhole.net/~kyle/extract_url/
# require:
# FreeBSD:
# /usr/ports/mail/p5-MIME-Tools
# /usr/ports/www/p5-HTML-Parser
# /usr/ports/devel/p5-Getopt-Long
# /usr/ports/devel/p5-Curses
# /usr/ports/textproc/p5-URI-Find
# Archlinux:
# perl-curses-ui perl-html-parser perl-mime-tools perl-uri-find perlxml
# gentoo:
# dev-perl/MIME-tools
# dev-perl/HTML-Parser
# perl-core/Getopt-Long
# dev-perl/Curses
# dev-perl/URI-Find
# dev-perl/libxml-perl
#macro index,pager \cb "<enter-command> set my_pdsave=\$pipe_decode<enter>\
#        <enter-command> unset pipe_decode<enter>\
#        <pipe-message>~/.mutt/extract_url.pl<enter>\
#        <enter-command> set pipe_decode=\$my_pdsave<enter>" "get URLs"

macro index,pager ,b "<enter-command> set my_pdsave=\$pipe_decode<enter>\
        <enter-command> unset pipe_decode<enter>\
        <pipe-message>~/.mutt/extract_url.pl<enter>\
        <enter-command> set pipe_decode=\$my_pdsave<enter>" "get URLs"

macro index,pager ,B "<enter-command> set my_pdsave=\$pipe_decode<enter>\
        <enter-command> set pipe_decode<enter>\
        <pipe-message>~/.mutt/extract_url.pl<enter>\
        <enter-command> set pipe_decode=\$my_pdsave<enter>" "decrypt message, then get URLs"

# mutt macros for mu
# index mail: mu index
#macro index <F8> "<shell-escape>mu find --clearlinks --format=links --linksdir=~/Mail/search " "mu find"
#macro index <F9> "<change-folder-readonly>~/Mail/search" "mu find results"

# mutt macros for notmuch
# http://upsilon.cc/~zack/blog/posts/2011/01/how_to_use_Notmuch_with_Mutt/
#macro index <F4> \
#      "<enter-command>unset wait_key<enter><shell-escape>~/.mutt/mutt-notmuch --prompt search<enter><change-folder-readonly>~/.cache/mutt_results<enter>" \
macro index <F3> \
      "<enter-command>unset wait_key<enter><pipe-message>notmuch-mutt tag -inbox<enter>" \
      "notmuch: remove message from inbox"

# search mail (using notmuch)"
macro index <F4> \
      "<enter-command>unset wait_key<enter><shell-escape>notmuch-mutt --prompt search<enter><change-folder-readonly>`echo ${XDG_CACHE_HOME:-$HOME/.cache}/notmuch/mutt/results`<enter>" \
      "notmuch: search mail"

# search and reconstruct owning thread (using notmuch)"
macro index <F5> \
      "<enter-command>unset wait_key<enter><pipe-message>notmuch-mutt thread<enter><change-folder-readonly>`echo ${XDG_CACHE_HOME:-$HOME/.cache}/notmuch/mutt/results`<enter><enter-command>set wait_key<enter>" \
      "notmuch: reconstruct thread"

# Namazu/nmzmail
#macro generic ,F "<shell-escape>nmzmail -r ~/Mail/.Search<enter>" "search via nmzmail"
# Load the results mailbox
#macro generic ,,f "<change-folder><kill-line>=.Search<enter>" "load the search results mailbox"
# Jump to original email - https://github.com/weisslj/muttjump
#macro generic ,j "<enter-command>push <pipe-message>muttjump<enter><enter>" "jump to original message"

# abook
macro generic,index,pager \ca "abook" "launch abook"
macro index,pager A "<pipe-message>abook --add-email<return>" \
  "add the sender address to abook"

# GTG http://gtg.fritalk.com/post/2010/02/03/GTG-tips-and-tricks2
macro index ,t "<enter-command>set pipe_decode<enter>\
  <pipe-message>gtg_new_task --interactive Follow up:<enter>\
  <save-message>+TODO<enter>"
#macro index ,t "<enter-command>set pipe_decode<enter><pipe-message>gtg_new_task --interactive Follow up:<enter>"

macro editor ";" \Ct # bin ; to  Ctrl-t in editor-mode (easier IMO)

# GTD
macro index \er "<modify-labels>-inbox -unread +read\\n" "Flag message as read"
macro index \e6 "<modify-labels>-inbox -unread +spam<enter>\
  <save-message>+Spam<enter>" "Move Message to Spam"

#macro pager B ":unset wait_key\n<pipe-message>mhonarc -single | browser\n:set wait_key\n"
#macro index B ":unset wait_key\n<pipe-message>mhonarc -single | browser\n:set wait_key\n"
#macro pager l "<pipe-message>mhonarc -single | w3m -T text/html\n"

# bounce-message
#bind index B bounce-message

# vim: ft=muttrc
