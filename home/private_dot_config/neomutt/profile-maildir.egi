# Mutt sender profile: egi

# http://www.mutt.org/doc/manual/#bgedit
# XXX not available on neomutt
set background_edit
set editor = "~/bin/bgedit-screen-tmux.sh nvim"
# set editor = "nvim-qt"
# set editor = "subl -n -w"

set folder = ~/Mail/EGI

# Copy sent message to this folder

# Send directly using msmtp
# set sendmail = "/usr/local/bin/msmtp -a egi"
# Queue mail if offline
# /usr/local/Cellar/msmtp/1.6.6/share/msmtp/scripts/msmtpq/README.msmtpq

# set sendmail = "$HOME/bin/msmtpq"
set smtp_url = "smtp://127.0.0.1:25/"
set ssl_force_tls = no
set ssl_starttls = no

# Don't wait for retrun code
# set sendmail_wait = -1
# Using neomutt's SMTP feature
# set smtp_authenticators = 'gssapi:login'
# set smtp_url = "smtp://baptiste.grenier@egi.eu@smtp.gmail.com:587/"
# Get token using https://security.google.com/settings/security/apppasswords
# Set passwod on OSX: security add-generic-password -a baptiste.grenier@egi.eu -s smtp.gmail.com -w
# set smtp_pass = `security find-generic-password -w -s smtp.gmail.com -a baptiste.grenier@egi.eu`

# Custom status color for this profile
color status cyan default

unset confirmappend
set spoolfile   = "+Inbox"
set move = no  # Stop asking to "move read messages to mbox"!
#set mbox        = "+All"
set postponed   = "+Drafts"
# Sent emails are recorded automatically by Gmail
unset record
# Add messages stored to the NeoMutt record (see $record in the NeoMutt docs)
# also to notmuch DB. If you reply to an email then the new email inherits tags
# from the original email.
# set mbox_type = Maildir
# set record = +Sent

# If using trash-folder-patch
set trash="+Trash"

mailboxes +Inbox +All +Drafts +Trash +Starred +Spam +Sent

set from       = "baptiste.grenier@egi.eu"
set envelope_from_address="baptiste.grenier@egi.eu"

# Signature file
set signature='~/.config/neomutt/signature-egi'

# Customized headers
unmy_hdr *                      # remove all extra headers first.

my_hdr Organization: EGI Foundation
my_hdr X-URL: https://egi.eu

my_hdr From: Baptiste Grenier <baptiste.grenier@egi.eu>
my_hdr Reply-To: Baptiste Grenier <baptiste.grenier@egi.eu>

# Use GPGME to simplify GPG and S/MIME configuration
set crypt_use_gpgme = yes
set crypt_autosign = yes
set crypt_verify_sig=yes
set crypt_replyencrypt=yes
set crypt_replysign=yes
set crypt_replysignencrypted=yes

# Pretty Good Privacy (PGP):
# PGP using gpgme (simplified conf)
# In order to sign with a sub key, only the subkey should be available locally
set pgp_sign_as="0xCDA18F02"    # UserID/KeyID for signing - main key ID
# Use S/MIME by default instead of PGP
# set pgp_autoencrypt           # Default (enc))
# set pgp_autosign              # Default (sign))
my_hdr X-PGP-Key: https://keys.bapt.name/pubkey.asc
my_hdr OpenPGP: id=CDA18F02\; url=https://keys.bapt.name/pubkey.asc\; preference\=sign

# S/MIME using gpgme (simplified conf)
# http://wiki.netbsd.org/users/wiz/mutt-smime/
# gpgsm --import TrustedRoot.crt
# gpgsm --import DigiCertCA.crt
# gpgsm --import baptiste_grenier_until_2021_02.p12
# gpgsm --list-keys
# gpgsm --list-secret-keys
set smime_is_default
set crypt_autosmime = yes
# TCS Sectigo ceritificate August 2021
# set smime_sign_as = 0x0EBD819F
# TCS Sectigo ceritificate October 2023
set smime_sign_as = 0xC21D536E
# Passphrase expiration
set smime_timeout=30000
# Pinentry program is taken from ~/.gnupg/gpg-agent.conf
# XXX gpg-agent running from mac os X? Keychain? Keybase?

# Extract PGP or S/MIME keys
# To be done before trying to send an encrypted message
# Known keys can be displayed using gpgsm --list-keys
bind index,pager \ck extract-keys

# Include the profile name in the status line
# TODO Align profile name on the right
# XXX: automatic padding with ─ does not work, using a normal - for now
set status_format = "───[ Folder: %f ]───[%r%m messages%?n? (%n new)?%?d? (%d to delete)?%?t? (%t tagged)? %?p? (%p postponed)?]───[ EGI ]%|-"

# Fetching mail
macro index \cf "<shell-escape>mbsync -a<enter>"

# Querying Google contacts
# set query_command="lbdbq %s"
# Query email addreses in the notmuch database
#set query_command = "notmuch address from:%s"
# All addresses matching the string, way to large
# set query_command = "notmuch address %s | grep -i %s"
# People that I've alrady written to, may contain non related people
# set query_command = "notmuch address --output sender from:baptiste.grenier@egi.eu to:*%s* | grep -i %s"
# People that wrote to me
# set query_command = "notmuch address --output sender from:*%s* to:baptiste.grenier@egi.eu"
# set query_command = "echo && notmuch address --output sender to:baptiste.grenier@egi.eu from:'*%s*' or --output recipients to:'*%s*' from:baptiste.grenier@egi.eu"
# set query_command = "echo && notmuch address --output sender from:'*%s*' or --output recipients to:'*%s*'"

# set query_format = "%4c %t %-70.70a %-70.70n %?e?(%e)?"

# looking up addresses with mu cfind
# set query_command="mu cfind --format=mutt-ab '%s'"

# Contacts from Google contacts
# Syncronised with vdirsyncer
# Accessed via khard
set query_command= "khard email --parsable %s"

# set alias_file = "~/.config/neomutt/aliases"
# source "~/.config/neomutt/aliases"

# Google-like key bindings
macro index,pager A "<save-message>+All<enter>" "move message to the archive"

# Notmuch search
# notmuch and notmuch-mutt coming from Nix
macro index <F8> \
"<enter-command>set my_old_pipe_decode=\$pipe_decode my_old_wait_key=\$wait_key nopipe_decode nowait_key<enter>\
<shell-escape>notmuch-mutt -r --prompt search<enter>\
<change-folder-readonly>`echo ${XDG_CACHE_HOME:-$HOME/.cache}/notmuch/mutt/results`<enter>\
<enter-command>set pipe_decode=\$my_old_pipe_decode wait_key=\$my_old_wait_key<enter>" \
"notmuch: search mail"

macro index <F9> \
"<enter-command>set my_old_pipe_decode=\$pipe_decode my_old_wait_key=\$wait_key nopipe_decode nowait_key<enter>\
<pipe-message>notmuch-mutt -r thread<enter>\
<change-folder-readonly>`echo ${XDG_CACHE_HOME:-$HOME/.cache}/notmuch/mutt/results`<enter>\
<enter-command>set pipe_decode=\$my_old_pipe_decode wait_key=\$my_old_wait_key<enter>" \
"notmuch: reconstruct thread"

macro index <F6> \
"<enter-command>set my_old_pipe_decode=\$pipe_decode my_old_wait_key=\$wait_key nopipe_decode nowait_key<enter>\
<pipe-message>notmuch-mutt tag -- -inbox<enter>\
<enter-command>set pipe_decode=\$my_old_pipe_decode wait_key=\$my_old_wait_key<enter>" \
"notmuch: remove message from inbox"

# http://www.mutt.org/doc/manual/#ignore-list-reply-to
set ignore_list_reply_to

# Mailing lists
# http://www.mutt.org/doc/manual/#lists
# Known
lists .*@mailman.egi.eu
# Subscribed
## EGI Maimlan
subscribe irtf@mailman.egi.eu
subscribe ism@mailman.egi.eu
subscribe office@mailman.egi.eu
subscribe operations@mailman.egi.eu
subscribe security-notifications@mailman.egi.eu
subscribe shodan@mailman.egi.eu
subscribe svg-rat@mailman.egi.eu
## EGI Google Workspace
subscribe admin@egi.eu
subscribe it-support@egi.eu
subscribe notifcations-ct@egi.eu
## Third parties
subscribe oss-security@lists.openwall.com
subscribe wise@lists.wise-community.org
subscribe refeds@lists.refeds.org

# vim: set ft=muttrc:
