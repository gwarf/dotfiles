# Mutt sender profile: maat

# Signature file
set signature="~/.mutt/signature-maat"

set envelope_from_address="bgrenier@maatg.fr"

# Customized headers
unmy_hdr *                      # remove all extra headers first.

my_hdr Return-Path: <bgrenier@maatg.fr>
my_hdr From: Baptiste Grenier <bgrenier@maatg.fr>
my_hdr Reply-To: Baptiste Grenier <bgrenier@maatg.fr>
my_hdr Organization: maatG
my_hdr X-URL: http://maatg.fr

# http://www.com.univ-mrs.fr/ssc/info/cours/mutt-smime.html
# http://pthree.org/2011/09/15/setting-up-mutt-with-smime-and-pgpmime/
# http://equiraptor.com/smime_mutt_how-to.html
# http://wiki.mutt.org/?MuttFaq/Encryption

# SMIME config
set smime_is_default = yes

# Set labels for certificates you add.
set smime_ask_cert_label

# Passphrase expiration
set smime_timeout=30000

# Global crypto options -- these affect PGP operations as well.
set crypt_autosign = yes
set crypt_replyencrypt = yes
set crypt_replysign = yes
set crypt_replysignencrypted = yes
set crypt_verify_sig = yes

set crypt_autosmime = yes

# Section A: Key Management.

# The (default) keyfile for signing/decrypting.  Uncomment the following
# line and replace the keyid with your own.
set smime_default_key="98151435.1"

# Uncommen to make mutt ask what key to use when trying to decrypt a message.
# It will use the default key above (if that was set) else.
# unset smime_decrypt_use_default_key

# Path to a file or directory with trusted certificates
set smime_ca_location="~/.smime/ca"

# Path to where all known certificates go. (must exist!)
set smime_certificates="~/.smime/certificates"

# Path to where all private keys go. (must exist!)
set smime_keys="~/.smime/keys"

# These are used to extract a certificate from a message.
# First generate a PKCS#7 structure from the message.
set smime_pk7out_command="openssl smime -verify -in %f -noverify -pk7out"

# Extract the included certificate(s) from a PKCS#7 structure.
#set smime_get_cert_command="openssl pkcs7 -print_certs -inform DER -in %f"
set smime_get_cert_command="openssl pkcs7 -print_certs -in %f"

# Extract the signer's certificate only from a S/MIME signature (sender verification)
set smime_get_signer_cert_command="openssl smime -verify -in %f -noverify -signer %c -out /dev/null"

# This is used to get the email address the certificate was issued to.
set smime_get_cert_email_command="openssl x509 -in  %f -noout -email"

# Add a certificate to the database using smime_keys.
set smime_import_cert_command="smime_keys add_cert %f"


# Sction B: Outgoing messages

# Algorithm to use for encryption.
# valid choices are rc2-40, rc2-64, rc2-128, des, des3
set smime_encrypt_with="des3"

# Encrypt a message. Input file is a MIME entity.
set smime_encrypt_command="openssl smime -encrypt -%a -outform DER -in %f %c"

# Sign.
set smime_sign_command="openssl smime -sign -signer %c -inkey %k -passin stdin -in %f -certfile %i -outform DER"


#Section C: Incoming messages

# Decrypt a message. Output is a MIME entity.
set smime_decrypt_command="openssl smime -decrypt  -passin stdin -inform DER -in %f -inkey %k -recip %c"
#set smime_decrypt_command="openssl smime -passin stdin -in %f -decrypt -inkey ~/repos/gwarf/private/certs/GRID2-CNRS/MaatG/userkey.pem"
#set smime_decrypt_command="openssl smime -passin stdin -decrypt -in %f -inkey ~/repos/gwarf/private/certs/GRID2-CNRS/MaatG/userkey.pem"

# Verify a signature of type multipart/signed
set smime_verify_command="openssl smime -verify -inform DER -in %s %C -content %f"

# Verify a signature of type application/x-pkcs7-mime
set smime_verify_opaque_command="\
openssl smime -verify -inform DER -in %s %C || \
openssl smime -verify -inform DER -in %s -noverify 2>/dev/null"


# Section D: Alternatives

# Sign.  If you wish to NOT include the certificate your CA used in signing
# your public key, use this command instead.
# set smime_sign_command="openssl smime -sign -signer %c -inkey %k -passin stdin -in %f -outform DER"
#
# In order to verify the signature only and skip checking the certificate  chain:
#
# set smime_verify_command="openssl smime -verify -inform DER -in %s -content %f -noverify"
# set smime_verify_opaque_command="openssl smime -verify -inform DER -in %s -noverify"

# Include the profile name in the status line
set status_format="%v: %f [Msgs:%?M?%M/?%m%?n? New:%n?%?o? Old:%o?%?d? Del:%d?%?F? Flag:%F?%?t? Tag:%t?%?p? Post:%p?%?b? Inc:%b?%?l? %l?]---@maat---%?V?(Filter: %V)?--%>-(%P)---"
