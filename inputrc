# Configuration file for readline
# Used by bash and various other applications to manage interactive commands
# Not used by zsh that is using ZLE

# Nice/clean dotfile: https://github.com/paulirish/dotfiles/blob/master/.inputrc

# FIXME breaks ctrl-a and ctrl-e: Use A and I
# http://www.catonmat.net/blog/bash-vi-editing-mode-cheat-sheet/
set editing-mode vi
set keymap vi

$if mode=vi
  set keymap vi-command
  "gg": beginning-of-history
  "G": end-of-history
  # notice how the "jj" movement is
  set keymap vi-insert
  # after 'set keymap vi-insert'?
  "jj": vi-movement-mode
  "\C-w": backward-kill-word
  "\C-p": history-search-backward

  # Line movements
  # FIXME does not work
  "\C-a": beginning-of-line
  "\C-e": end-of-line
  "\C-A": beginning-of-line
  "\C-E": end-of-line
  Control-A: beginning-of-line
  Control-E: end-of-line
$endif

$if Psql
  "S ": "select "
  "L ": "like "
  "II ": "insert into "
  "U ": "update "
  "V ": "view "
  "(V ": "values (( "
  "C ": "create "
  "DR ": "drop "
  "DI ": "distinct "
  "F ": "from  "
  "W ": "where  "
$endif

set bell-style visible
set expand-tilde on
set convert-meta on
set input-meta on
set output-meta on
set show-all-if-ambiguous on
set visible-stats on
set completion-ignore-case on

# Arrow keys in keypad mode
#"\C-[OD" backward-char
#"\C-[OC" forward-char
#"\C-[OA" previous-history
#"\C-[OB" next-history

# Arrow keys in ANSI mode
#"\C-[[D" backward-char
#"\C-[[C" forward-char
#"\C-[[A" previous-history
#"\C-[[B" next-history

# Arrow keys in 8 bit keypad mode
#"\C-M-OD" backward-char
#"\C-M-OC" forward-char
#"\C-M-OA" previous-history
#"\C-M-OB" next-history

# Arrow keys in 8 bit ANSI mode
#"\C-M-[D" backward-char
#"\C-M-[C" forward-char
#"\C-M-[A" previous-history
#"\C-M-[B" next-history
#"\e[1;5C" forward-word
#"\e[1;5D" backward-word
#"\e[1~" beginning-of-line
#"\e[4~" end-of-line
#"\e[5~" beginning-of-history
#"\e[6~" end-of-history
#"\e[3~" delete-char
#"\e[2~" quoted-insert
#"\e[5C" forward-word
#"\e[5D" backward-word
#"\e\e[C" forward-word
#"\e\e[D" backward-word

# By default up/down are bound to previous-history
# and next-history respectively. The following does the
# same but gives the extra functionality where if you
# type any text (or more accurately, if there is any text
# between the start of the line and the cursor),
# the subset of the history starting with that text
# is searched (like 4dos for e.g.).
# Note to get rid of a line just Ctrl-C
"\e[B": history-search-forward
"\e[A": history-search-backward

# ^l clear screen
#bind -m vi-insert "\C-l":clear-screen

# ^p check for partial match in history
#bind -m vi-insert "\C-p":dynamic-complete-history

# ^n cycle through the list of partial matches
#bind -m vi-insert "\C-n":menu-complete

# To allow to remap ctrl-w
# set bind-tty-special-chars Off
# For bash, add in bashrc:
# bind '\C-w:backward-kill-word'

# Line movements
Control-A: beginning-of-line
Control-E: end-of-line

# Use ctrl+w to delete last word
Control-W: backward-kill-word

# Use Alt-D to delete next word
"\e[3;5~": kill-word
